service: goldenfight
package:
  individually: false

provider:
  name: aws
  stage: prod
  runtime: python3.6
  region: us-east-1
  websocketApiName: goldenfight
  websocketApiRouteSelectionExpression: $request.body.action

plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: non-linux
    noDeploy: []

resources:
  Resources:
    GoldenFightWebAppRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /goldenfightwebapp/
        RoleName: GoldenFightWebAppRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: GoldenFightWebSocketPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - execute-api:*
                    - apigateway:Get
                    - api:*
                    - iot:*
                  Resource: "*"

                - Effect: Allow
                  Action:
                    - logs:*
                  Resource: "arn:aws:logs:*:*:*"

          - PolicyName: GoldenFightWebAppPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - lambda:InvokeFunction
                    - dynamodb:DescribeTable
                    - dynamodb:Query
                    - dynamodb:Scan
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:BatchWriteItem
                  Resource: "*"

                - Effect: Allow
                  Action:
                    - logs:*
                  Resource: "arn:aws:logs:*:*:*"

    GoldenFightMurdRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /murd/
        RoleName: GoldenFightMurdRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: murdPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: "Allow"
                  Action:
                    - logs:*
                    - execute-api:*
                    - apigateway:Get
                    - api:*
                    - dynamodb:*
                  Resource: "*"

    GoldenFightWebAppLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/GoldenFightWebApp
        RetentionInDays: 1


functions:
  GoldenFightWebApp:
    name: GoldenFightWebApp
    handler: GoldenFightWebApp.lambda_handler
    description: Provide a web based app to interact with GoldenFight system
    memorySize: 128
    timeout: 30
    role:
      Fn::GetAtt:
        - GoldenFightWebAppRole
        - Arn
    events:
      - http:
          path: /webapp
          method: get
      - http:
          path: /webapp
          method: post
      - http:
          path: /webapp/device_submit
          method: post
      - http:
          path: /webapp/network_submit
          method: post

  GoldenFightMurd:
    name: GoldenFightMurd
    handler: HTTPS.murd_ddb_api.lambda_handler
    description: Provide MURD interface for GoldenFight
    memorySize: 128
    timeout: 30
    role:
      Fn::GetAtt:
        - GoldenFightMurdRole
        - Arn    
    events:
      - http:
          path: /murd
          method: get
      - http:
          path: /murd
          method: post
      - http:
          path: /murd
          method: put
      - http:
          path: /murd
          method: delete

  GoldenFightMurdWS:
    name: GoldenFightMurdWS
    handler: WS.murd_ddb_ws_api.lambda_handler
    memorySize: 128
    timeout: 30
    role:
      Fn::GetAtt:
        - GoldenFightMurdRole
        - Arn
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $default
      - websocket:
          route: read
      - websocket:
          route: upload
      - websocket:
          route: delete
      - websocket:
          route: $disconnect
      - schedule:
          rate: rate(1 minute)
          enabled: false
          input:
            serve_subscribers: true

